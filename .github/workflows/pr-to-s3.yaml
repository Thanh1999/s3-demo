name: "PULL REQUEST to S3"

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  S3-BUCKET: ${{secrets.S3_BUCKET}}-${{ github.event.pull_request.number }}


jobs:
  move-content:
    name: "Move content to non prod"
    runs-on: ubuntu-latest
    environment:
      name: nonprod
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create S3 bucket
        run: |
          aws s3api create-bucket \
            --bucket ${{env.S3-BUCKET}}

      - name: Configure S3 bucket
        run: |
          aws s3api put-public-access-block \
            --bucket ${{env.S3-BUCKET}} \
            --public-access-block-configuration "BlockPublicAcls=false,BlockPublicPolicy=false,IgnorePublicAcls=false,RestrictPublicBuckets=false"
          aws s3api put-bucket-ownership-controls \
            --bucket ${{env.S3-BUCKET}} \
            --ownership-controls="Rules=[{ObjectOwnership=BucketOwnerEnforced}]"

      - name: Set public read policy
        run: |
          aws s3api put-bucket-policy \
            --bucket ${{env.S3-BUCKET}} \
            --policy '{
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "PublicReadGetObject",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": "s3:GetObject",
                  "Resource": "arn:aws:s3:::${{env.S3-BUCKET}}/*"
                }
              ]
            }'

      - name: Sync files to S3 bucket
        run: aws s3 sync . s3://${{secrets.S3_BUCKET}}-${{ github.event.pull_request.number }}
